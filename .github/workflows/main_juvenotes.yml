# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - juvenotes

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.13'

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: node-modules-cache
        with:
          path: ~/.npm
          key: build-${{ env.cache-name }}-${{ steps.vars.outputs.branch }}-${{ steps.vars.outputs.sha_short }}
          restore-keys: |
            build-${{ env.cache-name }}-${{ steps.vars.outputs.branch }}-${{ steps.vars.outputs.sha_short }}
            build-${{ env.cache-name }}-${{ steps.vars.outputs.branch }}
            build-${{ env.cache-name }}

      - name: Cache pip
        uses: actions/cache@v4
        env:
          cache-name: pip-cache
        with:
          path: ~/.cache/pip
          key: build-${{ env.cache-name }}-${{ steps.vars.outputs.branch }}-${{ steps.vars.outputs.sha_short }}
          restore-keys: |
            build-${{ env.cache-name }}-${{ steps.vars.outputs.branch }}-${{ steps.vars.outputs.sha_short }}
            build-${{ env.cache-name }}-${{ steps.vars.outputs.branch }}
            build-${{ env.cache-name }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry==1.8.3
          curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
          sudo apt-get install git-lfs --upgrade
          poetry install --with dev --no-root --no-interaction --no-ansi
          poetry add python-decouple

      - name: Install dependencies and build static files with webpack
        run: |
          npm install
          npm run build
      
      - name: Collect static files
        run: |
          cd backend
          poetry run manage.py collectstatic --noinput

        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: |
          cd backend 
          zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            backend/release.zip
            !venv/


  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'juvenotes'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_A6505BDBB8844E5E889FD12462E50AA2 }}